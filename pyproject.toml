[tool.poetry]
name = "latin-author-learning"
version = "0.1.0"
description = ""
authors = ["Stefan Maier <stm@localhost>"]
readme = "README.md"
packages = [{include = "latin_author_learning"}]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.11"
jupyter = "^1.0.0"
cltk = "^1.1.6"
wget = "^3.2"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pre-commit = "^3.3.3"
lorem = "^0.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.numpydoc_validation]
ignore = [
    "EX01",
    "SA01",
    "ES01",
    "GL08",
]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = true
ignore-semiprivate = true
ignore-private = true
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = false
ignore-setters = false
fail-under = 100
exclude = ["tests", "example_notebooks"]
verbose = 2
quiet = false

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
